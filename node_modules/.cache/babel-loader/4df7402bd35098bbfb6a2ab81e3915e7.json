{"ast":null,"code":"var _jsxFileName = \"/Users/dulvin/Documents/learning/react/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport './Expenses.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('');\n\n  const handleFilterUpdate = filteredYear => {\n    setFilteredYear(filteredYear);\n  };\n\n  const filteredExpenses = props.expenseItems.filter(expenseItem => {\n    return expenseItem.date.getFullYear() === parseInt(filteredYear);\n  });\n\n  let listOrInfo = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses to show\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 22\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    listOrInfo = filteredExpenses.map(expenseItem => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expenseItem.title,\n        amount: expenseItem.amount,\n        date: expenseItem.date\n      }, expenseItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onUpdateFilter: handleFilterUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: listOrInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"nl6XLxpokt7J+T95q7k/I/7NRaA=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/dulvin/Documents/learning/react/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","filteredYear","setFilteredYear","handleFilterUpdate","filteredExpenses","expenseItems","filter","expenseItem","date","getFullYear","parseInt","listOrInfo","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAO,gBAAP;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMK,kBAAkB,GAAIF,YAAD,IAAkB;AACzCC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACH,GAFD;;AAIA,QAAMG,gBAAgB,GAAGJ,KAAK,CAACK,YAAN,CAAmBC,MAAnB,CAA0BC,WAAW,IAAI;AAC9D,WAAOA,WAAW,CAACC,IAAZ,CAAiBC,WAAjB,OAAmCC,QAAQ,CAACT,YAAD,CAAlD;AACH,GAFwB,CAAzB;;AAIA,MAAIU,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;;AACA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,IAAAA,UAAU,GAAGP,gBAAgB,CAACS,GAAjB,CAAqBN,WAAW,IAAI;AAC7C,0BACI,QAAC,WAAD;AAEI,QAAA,KAAK,EAAEA,WAAW,CAACO,KAFvB;AAGI,QAAA,MAAM,EAAEP,WAAW,CAACQ,MAHxB;AAII,QAAA,IAAI,EAAER,WAAW,CAACC;AAJtB,SACSD,WAAW,CAACS,EADrB;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATY,CAAb;AAUH;;AAED,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEf,YAA1B;AAAwC,MAAA,cAAc,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,gBACKQ;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAlCQZ,Q;;KAAAA,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\n\nimport './Expenses.css'\nimport {useState} from \"react\";\n\nfunction Expenses(props) {\n\n    const [filteredYear, setFilteredYear] = useState('');\n\n    const handleFilterUpdate = (filteredYear) => {\n        setFilteredYear(filteredYear);\n    }\n\n    const filteredExpenses = props.expenseItems.filter(expenseItem => {\n        return expenseItem.date.getFullYear() === parseInt(filteredYear);\n    })\n\n    let listOrInfo = <p>No expenses to show</p>;\n    if (filteredExpenses.length > 0) {\n        listOrInfo = filteredExpenses.map(expenseItem => {\n            return (\n                <ExpenseItem\n                    key={expenseItem.id}\n                    title={expenseItem.title}\n                    amount={expenseItem.amount}\n                    date={expenseItem.date}\n                />\n            )\n        })\n    }\n\n    return (\n        <div>\n            <ExpensesFilter selected={filteredYear} onUpdateFilter={handleFilterUpdate}/>\n            <Card className='expenses'>\n                {listOrInfo}\n            </Card>\n        </div>\n    );\n}\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}